/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cabanaban.desklo.ui.desktop;

import com.cabanaban.desklo.viewmodel.TicketListItemViewModel;
import com.cabanaban.desklo.Services;
import java.util.HashMap;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Color;

/**
 *
 * @author henrique
 */
public class TicketManagerUIComponent extends javax.swing.JPanel {
    
    private String ticketID;
    private Services services;
    
    /**
     * Creates new form TicketManagerUIComponent
     */
    public TicketManagerUIComponent(Services services) {
        this.services = services;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        affectedUserLabel = new javax.swing.JLabel();
        textArealScrollPane = new javax.swing.JScrollPane();
        problemTextArea = new javax.swing.JTextArea();
        supporterLabel = new javax.swing.JLabel();
        elapsedTimeLabel = new javax.swing.JLabel();
        manageButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        affectedUserLabel.setText("affectedUserLabel");

        problemTextArea.setColumns(20);
        problemTextArea.setRows(5);
        problemTextArea.setText("problemTextArea");
        textArealScrollPane.setViewportView(problemTextArea);

        supporterLabel.setText("supporterLabel");

        elapsedTimeLabel.setText("elapsedTimeLabel");

        manageButton.setText("manageButton");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(affectedUserLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supporterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(elapsedTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textArealScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(manageButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textArealScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(affectedUserLabel)
                        .addComponent(elapsedTimeLabel)
                        .addComponent(supporterLabel))
                    .addComponent(manageButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel affectedUserLabel;
    private javax.swing.JLabel elapsedTimeLabel;
    private javax.swing.JButton manageButton;
    private javax.swing.JTextArea problemTextArea;
    private javax.swing.JLabel supporterLabel;
    private javax.swing.JScrollPane textArealScrollPane;
    // End of variables declaration//GEN-END:variables
    public void refreshData(TicketListItemViewModel ticketListItemViewModel) {
        affectedUserLabel.setText(ticketListItemViewModel.affectUserName);
        elapsedTimeLabel.setText(ticketListItemViewModel.elapsedTimeInHours);
        
        Color color = Color.decode(ticketListItemViewModel.elapsedTimeLabelColor);
        elapsedTimeLabel.setForeground(color);
        
        manageButton.setText(ticketListItemViewModel.actionText);
        problemTextArea.setText(ticketListItemViewModel.problemDescription);
        supporterLabel.setText(ticketListItemViewModel.supporterName);
        ticketID = ticketListItemViewModel.ticketID;
        if (manageButton.getActionListeners().length == 0) {
            manageButton.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    HashMap<String,String> request = new HashMap<String,String>();
                    request.put("ticketID", ticketID);
                    services.getDispatcher().dispatch(services, ticketListItemViewModel.action, request);
                }
            });
        }

    }

}
